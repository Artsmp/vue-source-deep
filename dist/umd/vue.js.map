{"version":3,"file":"vue.js","sources":["../../src/compiler/parse-html.js","../../src/compiler/index.js","../../src/util/index.js","../../src/observer/array.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// AST 语法树是用对象来描述原生语法的\n// 虚拟 DOM 用对象来描述 dom 结构的\n\n/* \nAST 语法树：\nlet root = {\n  tagName: 'div',\n  attrs: [\n    {\n      name: 'id',\n      value: 'app',\n    },\n  ],\n  parent: null,\n  type: 1, // 是个元素节点\n  children: [\n    {\n      tagName: 'span',\n      attrs: [\n        {\n          name: 'class',\n          value: 'text',\n        },\n      ],\n      parent: root,\n      type: 1,\n      children: [\n        {\n          text: 'hello',\n          type: 3, // 文本节点\n        },\n      ],\n    },\n  ]\n}\n\n*/\n\n// ?: 表示匹配不捕获 不要某个分组\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*` // 匹配标签名 el-layout 这样的\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})` // 命名空间标签：<aaa:bbb>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配标签结尾的 </div>\nconst attribute =\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/ // 匹配标签结束的 >\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\n/* // arguments[0] 匹配到的标签 arguments[1] 匹配到的标签名字（也就是第一个分组）\nlet r = '<dd:cc>'.match(startTagOpen)\nconsole.log('==>r', r)\n\nlet r2 = '</dd:cc>'.match(endTag)\nconsole.log('==>r2', r2)\n\nlet r3 = '   class    =    \"123\"'.match(attribute)\nconsole.log('==>r3', r3) */\n\n/* \n<div id=\"app\" class=\"text\">\n  <span style=\"color: red\">{{name}}</span>\n  <span>{{age}}</span>\n</div>\n*/\n\nlet root = null // AST抽象语法树(树根)对象\nlet currentParent // 用来标识当前父亲是谁\nlet stack = [] // 通过栈结构去标记标签是否成对出现\nconst ELEMENT_TYPE = 1 // 元素节点\nconst TEXT_TYPE = 3 // 文本节点\n\nfunction createASTElement(tagName, attrs) {\n  return {\n    tag: tagName,\n    type: ELEMENT_TYPE,\n    children: [],\n    attrs,\n    parent: null,\n  }\n}\n\nfunction start(tagName, attrs) {\n  // 遇到开始标签就创建一个 AST 元素\n  let element = createASTElement(tagName, attrs)\n  if (!root) {\n    root = element\n  }\n  currentParent = element // 把当前元素标记成父AST树\n  stack.push(element) // 将开始标签存放到栈中\n}\nfunction chars(text) {\n  text = text.replace(/\\s/g, '')\n  if (text) {\n    currentParent.children.push({\n      text,\n      type: TEXT_TYPE,\n    })\n  }\n}\nfunction end(tagName) {\n  let element = stack.pop()\n  // 那他如果相等那前一个就是他父亲\n  if (element.tag !== tagName) {\n    console.error('标签不匹配，请检查模板的语法！')\n    return\n  }\n  currentParent = stack[stack.length - 1] // 他前一个就是他父亲\n  if (currentParent) {\n    element.parent = currentParent\n    currentParent.children.push(element)\n  }\n}\n\nexport function parseHTML(html) {\n  function advance(n) {\n    html = html.substring(n)\n  }\n  function parseStartTag() {\n    let start = html.match(startTagOpen)\n    if (start) {\n      const match = {\n        tagName: start[1],\n        attrs: [],\n      }\n      advance(start[0].length) // 去掉被匹配部分 start[0] == '<div'\n      let end, attr // 是否能匹配到标签结束：能直接匹配到说明没有属性【!(end = html.match(startTagClose))】，不能则继续匹配属性【(attr = html.match(attribute))】\n      while (\n        !(end = html.match(startTagClose)) &&\n        (attr = html.match(attribute))\n      ) {\n        advance(attr[0].length) // 将匹配到的属性也从 html 字符串中去掉\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5],\n        })\n      }\n      if (end) {\n        advance(end[0].length) // 干掉最后一个 > 符号\n        return match\n      }\n    }\n  }\n  // 循环去获取，然后获取到后删除掉已经被匹配过的那一段字符串（正则匹配）\n  while (html) {\n    let textEnd = html.indexOf('<')\n    if (textEnd == 0) {\n      // 如果当前索引为0，肯定是一个标签：开始标签|结束标签\n      let startTagMatch = parseStartTag() // 通过这个方法获取到匹配的结果：tagName、attrs\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        continue // 如果开始标签匹配完毕后，继续下一次\n      }\n      let endTagMatch = html.match(endTag)\n      if (endTagMatch) {\n        advance(endTagMatch[0].length)\n        end(endTagMatch[1])\n        continue\n      }\n    }\n    let text = ''\n    if (textEnd >= 0) {\n      text = html.substring(0, textEnd)\n    }\n    if (text) {\n      advance(text.length)\n      chars(text)\n    }\n  }\n  return root\n}","import { parseHTML } from \"./parse-html\"\n\n\nexport function compileToFunction(template) {\n  // 1. 解析HTML字符串 -> AST语法树\n  let root = parseHTML(template)\n  console.log('==>root', root)\n  return function render() {}\n}\n","/**\n * 判断 data 是不是一个对象\n * @param {*} data\n * @returns\n */\nexport function isObj(data) {\n  return typeof data === 'object' && data !== null\n}\n/**\n * 定义不可枚举属性\n * @param {*} data\n * @param {*} key\n * @param {*} value\n */\nexport function def(data, key, value) {\n  Object.defineProperty(data, key, {\n    enumerable: false,\n    configurable: false,\n    value,\n  })\n}\n","// 要重写数组的方法7个\n\nconst oldArrayMethods = Array.prototype\n// 创建一个对象，该对象的原型链是 oldArrayMethods：重写的在第一层，原本的在第二层\nexport let arrayMethods = Object.create(oldArrayMethods)\n\nconst methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'splice', 'sort']\n\nmethods.forEach((method) => {\n  arrayMethods[method] = function (...args) {\n    console.log('==>用户调用了 push 方法') // AOP切片编程\n    oldArrayMethods[method].apply(this, args) // 调用原生的数组方法\n    let inserted,\n      ob = this.__ob__\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break\n      case 'splice': // 3个及以上的参数 增删改的功能 增加的时候 第三个参数及以后的参数是增加的内容 需要对它们进行劫持\n        inserted = args.slice(2)\n        break\n      default:\n        break\n    }\n    if (inserted) {\n      ob.observerArray(inserted)\n    }\n  }\n})\n","import { def, isObj } from '../util/index'\nimport { arrayMethods } from './array.js'\n\nclass Observer {\n  constructor(value) {\n    // 需要递归遍历深层次对象\n\n    // 如果是数组不需要对索引进行观测，会导致性能问题。前端开发中很少操作索引，而是使用数组提供的api\n    // shift unshift pop push splice reverse sort\n    // 我给每一个监控过得对象都增加这个属性\n    // value.__ob__ = this; // 这个会造成死递归 把自己又挂载到自己身上\n    def(value, '__obj__', this) // 让其不可配置和枚举，在调用 walk 方法时获取对象上的key就不会获取到 __ob__\n    if (Array.isArray(value)) {\n      // 1. 对数组的原型方法去进行劫持（主要是针对会改变原数组的方法）\n      value.__proto__ = arrayMethods\n      // 2. 劫持数组中的每一项（对象）\n      this.observerArray(value)\n      return\n    }\n\n    this.walk(value)\n  }\n\n  observerArray(value) {\n    for (let i = 0; i < value.length; i++) {\n      observe(value[i])\n    }\n  }\n\n  walk(data) {\n    let keys = Object.keys(data) // [name, age, address] 因为 __obj__ 被设置为不可枚举，所以这里就不会出现\n    for (let i = 0; i < keys.length; i++) {\n      let key = keys[i]\n      let value = data[key]\n      defineReactive(data, key, value)\n    }\n  }\n}\n\n// 把 data 数据都使用 Object.defineProperty 重新定义（不能兼容 IE8 及以下）\nexport function observe(data) {\n  if (!isObj(data)) {\n    return\n  }\n  return new Observer(data)\n}\n\nfunction defineReactive(data, key, value) {\n  console.log('==>data, key, value', data, key, value)\n  observe(value) // 递归实现深度劫持\n  Object.defineProperty(data, key, {\n    get() {\n      // 获取值得时候做操作\n      return value\n    },\n    set(newVal) {\n      // 设置值的时候做操作\n      if (value === newVal) return\n      console.log('==>值发生变化了')\n      observe(newVal) // 避免用户是赋值为一个新对象而没有深度劫持\n      value = newVal\n    },\n  })\n}\n","import { observe } from \"./observer/index\"\n\nexport function initState(vm) {\n  // vue 的数据来源：props、data、computed、method、watch\n  const opt = vm.$options\n  if (opt.props) {\n    initProps(vm)\n  }\n  if (opt.methods) {\n    initMethods(vm)\n  }\n  if (opt.data) {\n    initData(vm)\n  }\n  if (opt.computed) {\n    initComputed(vm)\n  }\n  if (opt.watch) {\n    initWatch(vm)\n  }\n}\n\nfunction initProps(vm) {}\nfunction initMethods(vm) {}\nfunction initData(vm) {\n  // 数据初始化工作\n  let data = vm.$options.data\n  // 数据也要挂载一份到实例上\n  data = vm._data = typeof data === 'function' ? data.call(this) : data\n  // 对象劫持，用户改变了数据我希望能够得到通知 => 刷新页面：数据变化视图变化 MVVM Object.defineProperty\n  observe(data) // 响应式原理\n}\nfunction initComputed(vm) {}\nfunction initWatch(vm) {}\n","import { compileToFunction } from './compiler/index'\nimport { initState } from './state'\n\nexport function initMixin(Vue) {\n  // 初始化流程\n  Vue.prototype._init = function (options) {\n    // 1. 数据的劫持\n    const vm = this\n    vm.$options = options // this.$options 指代的就是用户传递的属性\n\n    // 初始化状态(vue的数据来源)\n    initState(vm)\n\n    // 如果用户传入了 el 属性，我们就需要进行模板编译\n    // 传入 el，就需要实现挂载流程\n    if(vm.$options.el) {\n      vm.$mount(vm.$options.el)\n    }\n  }\n\n  Vue.prototype.$mount = function(el) {\n    const vm = this\n    const options = vm.$options\n    el = document.querySelector(el)\n    // 默认会先查找 render，没有就 template，再就是 el\n    if(!options.render) {\n      // 对模板进行编译\n      let template = options.template\n      if(!template && el) {\n        template = el.outerHTML // 火狐有兼容性问题\n      }\n      // 我们需要将template转化成render方法（虚拟DOM）\n      const render = compileToFunction(template)\n      options.render = render\n    }\n    // options.render\n  }\n}\n","// vue 入口文件，只是一个 Vue 的声明，主要功能是整合\nimport { initMixin } from './init'\n\nfunction Vue(options) {\n  // 进行 Vue 的初始化操作\n  this._init(options)\n}\n// 把流程拆成一个个原型上的方法，通过引入文件的方式给Vue添加原型上的方法\ninitMixin(Vue)\n// initRender(Vue)\n\nexport default Vue\n"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","element","push","chars","text","replace","end","pop","console","error","length","parseHTML","html","advance","n","substring","parseStartTag","match","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunction","template","log","render","isObj","data","def","key","Object","defineProperty","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","args","apply","inserted","ob","__ob__","slice","observerArray","Observer","constructor","isArray","__proto__","walk","i","observe","keys","defineReactive","get","set","newVal","initState","vm","opt","$options","props","initData","computed","watch","_data","call","initMixin","Vue","_init","options","el","$mount","document","querySelector","outerHTML"],"mappings":"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"}